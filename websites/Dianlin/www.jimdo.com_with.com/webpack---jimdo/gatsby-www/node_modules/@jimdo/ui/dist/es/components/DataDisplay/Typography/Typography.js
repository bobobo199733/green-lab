import { __rest, __assign } from '../../../_virtual/_tslib.js';
import { systemBreakpoints } from '../../constants.js';
import { useMedia } from '../../../hooks/useMedia/useMedia.js';
import { useStyles } from '../../../hooks/useStyles/useStyles.js';
import React, { forwardRef } from 'react';
import styles from './Typography.module.scss.js';
var variantDefaultMapping = {
  title: 'h1',
  heading1: 'h1',
  heading2: 'h2',
  heading3: 'h3',
  bodyDefault: 'p',
  bodySmall: 'p',
  bodyTiny: 'span'
};
var marginBottomDefaultMapping = {
  title: 'l',
  heading1: 'l',
  heading2: 'l',
  heading3: 'l',
  bodyDefault: 's',
  bodySmall: 'xs',
  bodyTiny: 'zero'
};
var breakpointQueryList = systemBreakpoints.map(function (item) {
  return item[1];
});
var Typography = forwardRef(function (_a, ref) {
  var _b;

  var className = _a.className,
      children = _a.children,
      component = _a.component,
      variant = _a.variant,
      fontWeight = _a.fontWeight,
      align = _a.align,
      textTransform = _a.textTransform,
      textDecoration = _a.textDecoration,
      wordBreak = _a.wordBreak,
      hyphens = _a.hyphens,
      marginBottom = _a.marginBottom,
      truncate = _a.truncate,
      color = _a.color,
      paddingRight = _a.paddingRight,
      paddingLeft = _a.paddingLeft,
      styleProps = __rest(_a, ["className", "children", "component", "variant", "fontWeight", "align", "textTransform", "textDecoration", "wordBreak", "hyphens", "marginBottom", "truncate", "color", "paddingRight", "paddingLeft"]); // eslint-disable-next-line react-hooks/rules-of-hooks


  var responsiveVariant = Array.isArray(variant) ? useMedia(breakpointQueryList, variant, variant[0]) : variant;
  var classes = useStyles(__assign(__assign({}, styleProps), {
    color: color,
    paddingRight: paddingRight,
    paddingLeft: paddingLeft,
    marginBottom: marginBottom || marginBottomDefaultMapping[responsiveVariant],
    margin: 'zero',
    padding: 'zero'
  }), styles.typography, (_b = {}, _b[styles.title] = responsiveVariant === 'title', _b[styles.heading1] = responsiveVariant === 'heading1', _b[styles.heading2] = responsiveVariant === 'heading2', _b[styles.heading3] = responsiveVariant === 'heading3', _b[styles.bodyDefault] = responsiveVariant === 'bodyDefault', _b[styles.bodySmall] = responsiveVariant === 'bodySmall', _b[styles.bodyTiny] = responsiveVariant === 'bodyTiny', _b[styles.fontWeightBold] = fontWeight === 'bold', _b[styles.textTransformUppercase] = textTransform === 'uppercase', _b[styles.textTransformLowercase] = textTransform === 'lowercase', _b[styles.textTransformCapitalize] = textTransform === 'capitalize', _b[styles.wordBreakBreakWord] = wordBreak === 'breakWord', _b[styles.textDecorationUnderline] = textDecoration === 'underline', _b[styles.hyphensAuto] = hyphens === 'auto', _b[styles.alignLeft] = align === 'left', _b[styles.alignRight] = align === 'right', _b[styles.alignCenter] = align === 'center', _b[styles.alignJustify] = align === 'justify', _b[styles.truncate] = truncate, _b), className);
  var Component = component || variantDefaultMapping[responsiveVariant];
  return React.createElement(Component, __assign({
    className: classes
  }, styleProps, {
    ref: ref
  }), children);
});
export { Typography };