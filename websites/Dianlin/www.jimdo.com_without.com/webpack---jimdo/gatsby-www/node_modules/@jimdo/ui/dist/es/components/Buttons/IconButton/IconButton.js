import { __rest, __assign } from '../../../_virtual/_tslib.js';
import { Icon } from '../../DataDisplay/Icon/Icon.js';
import { LoadingDots } from '../../Feedback/LoadingDots/LoadingDots.js';
import classNames from 'classnames';
import React from 'react';
import styles from './IconButton.module.scss.js';

var IconButton = function (props) {
  var _a;

  var className = props.className,
      disabled = props.disabled,
      loading = props.loading;
  props.buttonStyle;

  var icon = props.icon,
      htmlProps = __rest(props, ["className", "disabled", "loading", "buttonStyle", "icon"]);

  var classes = classNames(styles.iconButton, (_a = {}, _a[styles.negativeIconButton] = props.buttonStyle === 'negative', _a[styles.secondaryIconButton] = props.buttonStyle === 'secondary', _a[styles.disabled] = disabled, _a[styles.loading] = loading, _a), className);

  if ('href' in props) {
    return React.createElement("a", __assign({}, htmlProps, {
      className: classes
    }), loading ? React.createElement(LoadingDots, null) : React.createElement(Icon, {
      icon: icon
    }));
  }

  return React.createElement("button", __assign({}, htmlProps, {
    className: classes,
    disabled: loading || disabled
  }), loading ? React.createElement(LoadingDots, null) : React.createElement(Icon, {
    icon: icon
  }));
};

IconButton.displayName = 'IconButton';
export { IconButton };